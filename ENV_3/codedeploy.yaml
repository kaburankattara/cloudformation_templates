AWSTemplateFormatVersion: 2010-09-09

Parameters:
  SysName:
    Type: String
  Env:
    Type: String
    AllowedValues:
      - Prod
      - Stg
      - dev
  SpaceChar:
    Type: String
    Default: '-'
  BucketForBuildedSource:
    Type: String
  BuildedSource:
    Type: String
  DeployDestinationEC2Name:
    Type: String

Resources:

  CodeDeployServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName : aws-codedeploy-service-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ""
            Effect: Allow
            Principal:
              Service: codedeploy.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodeDeployDeployerAccess
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole

  CodeDeployApplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: !Sub '${SysName}${SpaceChar}${Env}${SpaceChar}application${SpaceChar}'
      ComputePlatform: Server

  CodeDeployDeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      ApplicationName: !Sub '${SysName}${SpaceChar}${Env}${SpaceChar}application${SpaceChar}'
      Deployment:
        Revision:
          RevisionType: S3
          S3Location:
            Bucket: !Ref BucketForBuildedSource
            BundleType: zip
            Key: !Ref BuildedSource
      DeploymentConfigName: CodeDeployDefault.OneAtATime
      DeploymentGroupName: !Sub '${SysName}${SpaceChar}${Env}${SpaceChar}deployment${SpaceChar}group'
      DeploymentStyle:
        DeploymentOption: WITHOUT_TRAFFIC_CONTROL
        DeploymentType: IN_PLACE
      Ec2TagFilters:
        - Key: Name
          Type: KEY_AND_VALUE
          Value: !Ref DeployDestinationEC2Name
      ServiceRoleArn: !GetAtt CodeDeployServiceRole.Arn
