AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  Environment:
    Description: Type of this environment.
    Type: String
    Default: prod
    AllowedValues:
      - prod
      - staging
      - dev
  SystemName:
    Description: Name of this system.
    Type: String
    Default: my-beanstalk
  MyVpcId:
    Type: String
  MyAppSubnetId:
    Type: String
  MyFrontSubnetId:
    Type: String
  MyAppSGId:
    Type: String
  SSLCertificateId:
    Type: String

Resources:
  sampleApplication:
    Type: AWS::ElasticBeanstalk::Application
    Properties:
      Description: AWS Elastic Beanstalk Sample Application

  sampleApplicationVersion:
    Type: AWS::ElasticBeanstalk::ApplicationVersion
    Properties:
      ApplicationName:
        Ref: sampleApplication
      Description: AWS ElasticBeanstalk Sample Application Version
      SourceBundle:
        S3Bucket: !Sub "elasticbeanstalk-ap-northeast-1-498588106976"
        S3Key: helloworld-0.0.1-SNAPSHOT.jar

  sampleConfigurationTemplate:
    Type: AWS::ElasticBeanstalk::ConfigurationTemplate
    Properties:
      ApplicationName:
        Ref: sampleApplication
      Description: AWS ElasticBeanstalk Sample Configuration Template
      OptionSettings:
        - Namespace: aws:autoscaling:asg
          OptionName: MinSize
          Value: '1'
        - Namespace: aws:autoscaling:asg
          OptionName: MaxSize
          Value: '1'
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: EnvironmentType
          Value: LoadBalanced
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: IamInstanceProfile
          Value: !Ref MyInstanceProfile
      SolutionStackName: 64bit Amazon Linux 2 v3.2.9 running Corretto 8

  sampleEnvironment:
    Type: AWS::ElasticBeanstalk::Environment
    DependsOn: MyELBSG
    Properties:
      ApplicationName:
        Ref: sampleApplication
      Description: AWS ElasticBeanstalk Sample Environment
      TemplateName:
        Ref: sampleConfigurationTemplate
      VersionLabel:
        Ref: sampleApplicationVersion
      OptionSettings:
        - Namespace : aws:ec2:vpc
          OptionName : VPCId
          Value : !Ref MyVpcId
        - Namespace : aws:ec2:vpc
          OptionName: Subnets
          Value: !Ref MyAppSubnetId
        - Namespace : aws:ec2:vpc
          OptionName: ELBSubnets
          Value : !Ref MyFrontSubnetId
        - Namespace : aws:elb:loadbalancer
          OptionName: SecurityGroups
          Value : !Ref MyELBSG
        - Namespace: aws:elb:loadbalancer
          OptionName: ManagedSecurityGroup
          Value: !Ref MyELBSG
        - Namespace: aws:elb:listener
          OptionName: ListenerEnabled
          Value: false
        - Namespace: aws:elb:listener:443
          OptionName: ListenerProtocol
          Value: SSL
        - Namespace: aws:elb:listener:443
          OptionName: InstancePort
          Value: 80
        - Namespace: aws:elb:listener:443
          OptionName: SSLCertificateId
          Value: !Ref SSLCertificateId
        - Namespace: aws:elb:listener:443
          OptionName: ListenerEnabled
          Value: true
        - Namespace: aws:elasticbeanstalk:cloudwatch:logs
          OptionName: StreamLogs
          Value: true





  MyInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Description: Beanstalk EC2 role
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkMulticontainerDocker
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkWorkerTier

  MyInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref MyInstanceRole


  MyELBSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub '${SystemName}-${Environment}-elb-sg'
      GroupName: !Sub '${SystemName}-${Environment}-elb-sg'
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: outbound
          FromPort: -1
          IpProtocol: -1
          ToPort: -1
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: inbound
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
      Tags:
        - Key: Name
          Value: !Sub '${SystemName}-${Environment}-elb-sg'
      VpcId: !Ref MyVpcId
