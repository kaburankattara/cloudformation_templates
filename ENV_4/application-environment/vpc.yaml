AWSTemplateFormatVersion: 2010-09-09

Parameters:
  SysName:
    Type: String
  Env:
    Type: String
    AllowedValues:
      - prod
      - stag
      - dev
    Default: dev
  SpaceChar:
    Type: String
    Default: '-'
  AvailabilityZone1:
    Type: String
    AllowedValues:
      - ap-northeast-1a
      - ap-northeast-1b
      - ap-northeast-1c
      - ap-northeast-3a
      - ap-northeast-3b
      - ap-northeast-3c
    Default: ap-northeast-1a
  AvailabilityZone2:
    Type: String
    AllowedValues:
      - ap-northeast-1a
      - ap-northeast-1b
      - ap-northeast-1c
      - ap-northeast-3a
      - ap-northeast-3b
      - ap-northeast-3c
    Default: ap-northeast-1c
  VpcName:
    Type: String
    Default: vpc
  VpcCidrBlock:
    Type: String
    Default: 192.168.16.0/20
  FrontSubnetName:
    Type: String
    Default: front-Subnet
  FrontSubnet1CidrBlock:
    Type: String
    Default: 192.168.20.0/24
  FrontSubnet2CidrBlock:
    Type: String
    Default: 192.168.21.0/24
  BastionSubnetName:
    Type: String
    Default: bastion-subnet
  BastionSubnetCidrBlock:
    Type: String
    Default: 192.168.17.0/24
  AppSubnetName:
    Type: String
    Default: app-subnet
  AppSubnet1CidrBlock:
    Type: String
    Default: 192.168.30.0/24
  AppSubnet2CidrBlock:
    Type: String
    Default: 192.168.31.0/24
  InternetGatewayName:
    Type: String
    Default: internetGateway
  FrontRTName:
    Type: String
    Default: front-rt
  NatEIPName:
    Type: String
    Default: nat-ip
  NatGatewayName:
    Type: String
    Default: natGateway
  NatRTName:
    Type: String
    Default: nat-rt
  DefaultSecurityGroup:
    Type: String
    Default: default-sg
  SshSecurityGroup:
    Type: String
    Default: ssh-sg
  FrontSecurityGroup:
    Type: String
    Default: front-sg
  AppSecurityGroup:
    Type: String
    Default: app-sg
Resources:

  MyVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Ref VpcCidrBlock
      Tags:
        - Key: Name
          Value: !Sub
            - '${SysName}${SpaceChar}${Env}${SpaceChar}${VpcName}'
            - VpcName: !Ref VpcName

  MyFrontSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Ref AvailabilityZone1
      CidrBlock: !Ref FrontSubnet1CidrBlock
      Tags:
        - Key: Name
          Value: !Sub
            - '${SysName}${SpaceChar}${Env}${SpaceChar}${FrontSubnetName}${SpaceChar}${AvailabilityZone1}'
            - FrontSubnetName: !Ref FrontSubnetName
      VpcId: !Ref MyVPC

  MyFrontSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Ref AvailabilityZone2
      CidrBlock: !Ref FrontSubnet2CidrBlock
      Tags:
        - Key: Name
          Value: !Sub
            - '${SysName}${SpaceChar}${Env}${SpaceChar}${FrontSubnetName}${SpaceChar}${AvailabilityZone2}'
            - FrontSubnetName: !Ref FrontSubnetName
      VpcId: !Ref MyVPC

  MyBastionSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Ref AvailabilityZone1
      CidrBlock: !Ref BastionSubnetCidrBlock
      Tags:
        - Key: Name
          Value: !Sub
            - '${SysName}${SpaceChar}${Env}${SpaceChar}${BastionSubnetName}'
            - BastionSubnetName: !Ref BastionSubnetName
      VpcId: !Ref MyVPC

  MyAppSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Ref AvailabilityZone1
      CidrBlock: !Ref AppSubnet1CidrBlock
      Tags:
        - Key: Name
          Value: !Sub
            - '${SysName}${SpaceChar}${Env}${SpaceChar}${AppSubnetName}${SpaceChar}${AvailabilityZone1}'
            - AppSubnetName: !Ref AppSubnetName
      VpcId: !Ref MyVPC

  MyAppSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Ref AvailabilityZone2
      CidrBlock: !Ref AppSubnet2CidrBlock
      Tags:
        - Key: Name
          Value: !Sub
            - '${SysName}${SpaceChar}${Env}${SpaceChar}${AppSubnetName}${SpaceChar}${AvailabilityZone2}'
            - AppSubnetName: !Ref AppSubnetName
      VpcId: !Ref MyVPC

  MyInternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: !Sub
            - '${SysName}${SpaceChar}${Env}${SpaceChar}${InternetGatewayName}'
            - AppSubnetName: !Ref InternetGatewayName

  MyFrontRT:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      Tags:
        - Key: Name
          Value: !Sub
            - '${SysName}${SpaceChar}${Env}${SpaceChar}${FrontRTName}'
            - FrontRTName: !Ref FrontRTName
      VpcId: !Ref MyVPC

  MyGatewayToInternet:
    Type: 'AWS::EC2::Route'
    DependsOn: MyVPCGatewayAttachment
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref MyInternetGateway
      RouteTableId: !Ref MyFrontRT

  MyVPCGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    DependsOn: MyInternetGateway
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref MyInternetGateway

  MyNatEIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Tags:
        - Key: Name
          Value: !Sub
            - '${SysName}${SpaceChar}${Env}${SpaceChar}${NatEIPName}'
            - NatEIPName: !Ref NatEIPName

  MyNatGateway:
    Type: 'AWS::EC2::NatGateway'
    DependsOn: MyNatEIP
    Properties:
      AllocationId: !GetAtt MyNatEIP.AllocationId
      ConnectivityType: public
      SubnetId: !Ref MyFrontSubnet1
      Tags:
        - Key: Name
          Value: !Sub
            - '${SysName}${SpaceChar}${Env}${SpaceChar}${NatGatewayName}'
            - NatGatewayName: !Ref NatGatewayName

  MyNatRT:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      Tags:
        - Key: Name
          Value: !Sub
            - '${SysName}${SpaceChar}${Env}${SpaceChar}${NatRTName}'
            - NatRTName: !Ref NatRTName
      VpcId: !Ref MyVPC

  MyNatGatewayToInternet:
    Type: 'AWS::EC2::Route'
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref MyNatGateway
      RouteTableId: !Ref MyNatRT

  MyDefaultSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub
        - '${SysName}${SpaceChar}${Env}${SpaceChar}${DefaultSecurityGroup}'
        - DefaultSecurityGroup: !Ref DefaultSecurityGroup
      GroupName: !Sub
        - '${SysName}${SpaceChar}${Env}${SpaceChar}${DefaultSecurityGroup}'
        - DefaultSecurityGroup: !Ref DefaultSecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: outbound
          FromPort: -1
          IpProtocol: -1
          ToPort: -1
      SecurityGroupIngress:
        - Description: inbound
          FromPort: -1
          IpProtocol: -1
          ToPort: -1
      Tags:
        - Key: Name
          Value: !Sub
            - '${SysName}${SpaceChar}${Env}${SpaceChar}${DefaultSecurityGroup}'
            - DefaultSecurityGroup: !Ref DefaultSecurityGroup
      VpcId: !Ref MyVPC

  MySshSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub
        - '${SysName}${SpaceChar}${Env}${SpaceChar}${SshSecurityGroup}'
        - SshSecurityGroup: !Ref SshSecurityGroup
      GroupName: !Sub
        - '${SysName}${SpaceChar}${Env}${SpaceChar}${SshSecurityGroup}'
        - SshSecurityGroup: !Ref SshSecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: outbound
          FromPort: -1
          IpProtocol: -1
          ToPort: -1
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: inbound
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
      Tags:
        - Key: Name
          Value: !Sub
            - '${SysName}${SpaceChar}${Env}${SpaceChar}${SshSecurityGroup}'
            - SshSecurityGroup: !Ref SshSecurityGroup
      VpcId: !Ref MyVPC

  MyFrontSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub
        - '${SysName}${SpaceChar}${Env}${SpaceChar}${FrontSecurityGroup}'
        - FrontSecurityGroup: !Ref FrontSecurityGroup
      GroupName: !Sub
        - '${SysName}${SpaceChar}${Env}${SpaceChar}${FrontSecurityGroup}'
        - FrontSecurityGroup: !Ref FrontSecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: outbound
          FromPort: -1
          IpProtocol: -1
          ToPort: -1
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: inbound
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
        - CidrIp: !Ref BastionSubnetCidrBlock
          Description: inbound
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
      Tags:
        - Key: Name
          Value: !Sub
            - '${SysName}${SpaceChar}${Env}${SpaceChar}${FrontSecurityGroup}'
            - FrontSecurityGroup: !Ref FrontSecurityGroup
      VpcId: !Ref MyVPC

  MyAppSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub
        - '${SysName}${SpaceChar}${Env}${SpaceChar}${AppSecurityGroup}'
        - AppSecurityGroup: !Ref AppSecurityGroup
      GroupName: !Sub
        - '${SysName}${SpaceChar}${Env}${SpaceChar}${AppSecurityGroup}'
        - AppSecurityGroup: !Ref AppSecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: outbound
          FromPort: -1
          IpProtocol: -1
          ToPort: -1
      SecurityGroupIngress:
        - CidrIp: !Ref FrontSubnet1CidrBlock
          Description: inbound
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
        - CidrIp: !Ref FrontSubnet1CidrBlock
          Description: inbound
          FromPort: 8009
          IpProtocol: tcp
          ToPort: 8009
        - CidrIp: !Ref FrontSubnet2CidrBlock
          Description: inbound
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
        - CidrIp: !Ref FrontSubnet2CidrBlock
          Description: inbound
          FromPort: 8009
          IpProtocol: tcp
          ToPort: 8009
        - CidrIp: !Ref BastionSubnetCidrBlock
          Description: inbound
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
      Tags:
        - Key: Name
          Value: !Sub
            - '${SysName}${SpaceChar}${Env}${SpaceChar}${AppSecurityGroup}'
            - AppSecurityGroup: !Ref AppSecurityGroup
      VpcId: !Ref MyVPC

  FrontSubnetRouteTableAssociation1:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref MyFrontRT
      SubnetId: !Ref MyFrontSubnet1

  FrontSubnetRouteTableAssociation2:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref MyFrontRT
      SubnetId: !Ref MyFrontSubnet2

  BastionSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref MyFrontRT
      SubnetId: !Ref MyBastionSubnet

  AppSubnetRouteTableAssociation1:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref MyNatRT
      SubnetId: !Ref MyAppSubnet1

  AppSubnetRouteTableAssociation2:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref MyNatRT
      SubnetId: !Ref MyAppSubnet2

Outputs:
  MyVpcId:
    Value: !Ref MyVPC
  MyBastionSubnetId:
    Value: !Ref MyBastionSubnet
  MySshSGId:
    Value: !Ref MySshSG
  MyAppSubnet1Id:
    Value: !Ref MyAppSubnet1
  MyAppSubnet2Id:
    Value: !Ref MyAppSubnet2
  MyAppSGId:
    Value: !Ref MyAppSG
  MyFrontSubnet1Id:
    Value: !Ref MyFrontSubnet1
  MyFrontSubnet2Id:
    Value: !Ref MyFrontSubnet2
  MyFrontSGId:
    Value: !Ref MyFrontSG